generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Account {
  account_id      Int         @id @default(autoincrement())
  email           String      @unique
  password        String
  email_validated Boolean     @default(false)
  created_at      DateTime    @default(now())
  role            AccountRole @default(USER_ROLE)
  profiles        Profile[]
}

model Profile {
  profile_id String        @id @default(uuid()) @db.Uuid
  name       String
  birthdate  DateTime      @default(now())
  is_primary Boolean       @default(false)
  created_at DateTime      @default(now())
  account_id Int
  img        String?
  weight     Float?
  height     Float?
  activity   ActivityLevel
  gender     String
  lastname   String
  occupation String?
  device     Device?
  account    Account       @relation(fields: [account_id], references: [account_id])
}

model Device {
  device_id    String         @id @default(uuid()) @db.Uuid
  device_name  String
  connected_at DateTime       @default(now())
  profile_id   String         @unique @db.Uuid
  product_id   String         @unique @db.Uuid
  product      Product        @relation(fields: [product_id], references: [product_id])
  profile      Profile        @relation(fields: [profile_id], references: [profile_id])
  healthRecors HealthRecord[]
}

model HealthRecord {
  record_id   String   @id @default(uuid()) @db.Uuid
  temperature Float
  hydration   Float
  timestamp   DateTime @default(now())
  device_id   String   @db.Uuid
  device      Device   @relation(fields: [device_id], references: [device_id])
}

model Product {
  product_id  String   @id @default(uuid()) @db.Uuid
  device_code String   @unique
  created_at  DateTime @default(now())
  device      Device?
}

enum ActivityLevel {
  SEDENTARY
  LIGHTLY_ACTIVE
  MODERATELY_ACTIVE
  VERY_ACTIVE
  SUPER_ACTIVE
}

enum AccountRole {
  USER_ROLE
  ENTERPRISE_ROLE
}
